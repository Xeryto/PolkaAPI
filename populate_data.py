#!/usr/bin/env python3
"""
Script to populate the database with sample brands and styles data
"""
from database import SessionLocal, init_db
from models import Brand, Style
from sqlalchemy.orm import Session

# Sample brands data
BRANDS_DATA = [
    {"id": 1, "name": "–ê—Ä–º–∞–Ω–∏", "slug": "armani", "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–æ–º –º–æ–¥—ã"},
    {"id": 2, "name": "–ë—É—Ä–±–µ—Ä—Ä–∏", "slug": "burberry", "description": "–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π –ª—é–∫—Å–æ–≤—ã–π –±—Ä–µ–Ω–¥"},
    {"id": 3, "name": "–ì—É—á—á–∏", "slug": "gucci", "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –º–æ–¥–Ω—ã–π –¥–æ–º"},
    {"id": 4, "name": "–•—å—é–≥–æ –ë–æ—Å—Å", "slug": "hugo-boss", "description": "–ù–µ–º–µ—Ü–∫–∏–π –±—Ä–µ–Ω–¥ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞"},
    {"id": 5, "name": "–†–∞–ª—å—Ñ –õ–æ—Ä–µ–Ω", "slug": "ralph-lauren", "description": "–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –±—Ä–µ–Ω–¥ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –æ–¥–µ–∂–¥—ã"},
    {"id": 6, "name": "–í–µ—Ä—Å–∞—á–µ", "slug": "versace", "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–æ–º –º–æ–¥—ã"},
    {"id": 7, "name": "–ü—Ä–∞–¥–∞", "slug": "prada", "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –ª—é–∫—Å–æ–≤—ã–π –±—Ä–µ–Ω–¥"},
    {"id": 8, "name": "–ö–µ–ª—å–≤–∏–Ω –ö–ª—è–π–Ω", "slug": "calvin-klein", "description": "–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –±—Ä–µ–Ω–¥ –æ–¥–µ–∂–¥—ã"},
    {"id": 9, "name": "–ë–∞–ª–º–∞–Ω", "slug": "balmain", "description": "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –¥–æ–º –º–æ–¥—ã"},
    {"id": 10, "name": "–§–µ–Ω–¥–∏", "slug": "fendi", "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –ª—é–∫—Å–æ–≤—ã–π –±—Ä–µ–Ω–¥"},
    {"id": 11, "name": "–¢–æ–º –§–æ—Ä–¥", "slug": "tom-ford", "description": "–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä"},
    {"id": 12, "name": "–®–∞–Ω–µ–ª—å", "slug": "chanel", "description": "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –¥–æ–º –º–æ–¥—ã"}
]

# Sample styles data
STYLES_DATA = [
    {"id": "casual", "name": "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π", "description": "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Å–∫–∏"},
    {"id": "formal", "name": "–î–µ–ª–æ–≤–æ–π", "description": "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –æ—Ñ–∏—Å–∞ –∏ –≤—Å—Ç—Ä–µ—á"},
    {"id": "sport", "name": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π", "description": "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏"},
    {"id": "romantic", "name": "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π", "description": "–ñ–µ–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ, –∏–∑—è—â–Ω—ã–µ —Å–∏–ª—É—ç—Ç—ã"},
    {"id": "streetwear", "name": "–£–ª–∏—á–Ω—ã–π", "description": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥—Å–∫–æ–π —Å—Ç–∏–ª—å"},
    {"id": "vintage", "name": "–í–∏–Ω—Ç–∞–∂", "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å–∏–ª—É—ç—Ç—ã –ø—Ä–æ—à–ª—ã—Ö –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–π"},
    {"id": "minimalist", "name": "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º", "description": "–ü—Ä–æ—Å—Ç—ã–µ, –ª–∞–∫–æ–Ω–∏—á–Ω—ã–µ —Å–∏–ª—É—ç—Ç—ã –∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞"},
    {"id": "bohemian", "name": "–ë–æ–≥–µ–º–Ω—ã–π", "description": "–°–≤–æ–±–æ–¥–Ω—ã–µ —Å–∏–ª—É—ç—Ç—ã –∏ —ç—Ç–Ω–∏—á–µ—Å–∫–∏–µ –º–æ—Ç–∏–≤—ã"}
]

def populate_brands(db: Session):
    """Populate brands table with sample data"""
    print("üì¶ Populating brands...")
    
    for brand_data in BRANDS_DATA:
        # Check if brand already exists
        existing_brand = db.query(Brand).filter(Brand.id == brand_data["id"]).first()
        if existing_brand:
            print(f"  ‚ö†Ô∏è  Brand {brand_data['name']} already exists, skipping...")
            continue
        
        brand = Brand(**brand_data)
        db.add(brand)
        print(f"  ‚úÖ Added brand: {brand_data['name']}")
    
    db.commit()
    print(f"‚úÖ Successfully populated {len(BRANDS_DATA)} brands")

def populate_styles(db: Session):
    """Populate styles table with sample data"""
    print("üé® Populating styles...")
    
    for style_data in STYLES_DATA:
        # Check if style already exists
        existing_style = db.query(Style).filter(Style.id == style_data["id"]).first()
        if existing_style:
            print(f"  ‚ö†Ô∏è  Style {style_data['name']} already exists, skipping...")
            continue
        
        style = Style(**style_data)
        db.add(style)
        print(f"  ‚úÖ Added style: {style_data['name']}")
    
    db.commit()
    print(f"‚úÖ Successfully populated {len(STYLES_DATA)} styles")

def main():
    """Main function to populate all data"""
    print("üöÄ Starting database population...")
    
    # Initialize database
    init_db()
    
    # Get database session
    db = SessionLocal()
    
    try:
        # Populate brands
        populate_brands(db)
        print()
        
        # Populate styles
        populate_styles(db)
        print()
        
        print("üéâ Database population completed successfully!")
        
    except Exception as e:
        print(f"‚ùå Error populating database: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    main() 
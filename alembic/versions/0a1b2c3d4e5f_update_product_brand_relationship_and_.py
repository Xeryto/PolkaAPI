"""Update Product-Brand relationship and add Product-Style many-to-many

Revision ID: 0a1b2c3d4e5f
Revises: fd48051c7047
Create Date: 2025-07-16 21:10:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a1b2c3d4e5f'
down_revision = 'fd48051c7047'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the old style_id column from products
    op.drop_constraint('products_style_id_fkey', 'products', type_='foreignkey')
    op.drop_column('products', 'style_id')

    # Create product_styles association table
    op.create_table('product_styles',
    sa.Column('product_id', sa.String(), nullable=False),
    sa.Column('style_id', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['style_id'], ['styles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id', 'style_id')
    )

    # Alter brand_id to be non-nullable
    op.alter_column('products', 'brand_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert brand_id to nullable
    op.alter_column('products', 'brand_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # Drop product_styles table
    op.drop_table('product_styles')

    # Re-add style_id column to products (if needed for downgrade path)
    op.add_column('products', sa.Column('style_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.create_foreign_key('products_style_id_fkey', 'products', 'styles', ['style_id'], ['id'])
    # ### end Alembic commands ###
